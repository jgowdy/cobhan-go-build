FROM docker.io/alpine:3.14.1 AS alpine-gccgo-apk-build

# Install build dependencies
RUN apk add git vim make automake autoconf gmp gmp-dev mpfr mpfr-dev mpc mpc1-dev flex abuild bison texinfo gawk zip zlib-dev libucontext-dev gcc-gnat-bootstrap linux-headers isl-dev build-base

# Add a build user so we don't build as root
RUN adduser -D build

# Switch to the build user
USER build

# Create signing keys for the apks
RUN abuild-keygen -a -n

# Move to build user's home directory
WORKDIR /home/build

# Shallow clone the aports repo to get the abuild files
RUN git clone --depth 1 --branch v3.14.1 --single-branch https://github.com/alpinelinux/aports.git

# Copy the patched abuild files to /home/build/aports/main/gcc
COPY /0042-no-args.patch /APKBUILD /home/build/aports/main/gcc/

# Move to the gcc aports directory to build gcc apks
WORKDIR /home/build/aports/main/gcc

# Build the apk files using abuild
RUN LANG_CXX=0 LANG_D=0 LANG_OBJC=0 LANG_FORTRAN=0 LANG_ADA=0 abuild -K -s /home/build/src

FROM docker.io/alpine AS alpine-gccgo

COPY --from=alpine-gccgo-apk-build /home/build/packages/main/x86_64/*.apk /packages/

RUN apk add --allow-untrusted /packages/*.apk

RUN apk update
